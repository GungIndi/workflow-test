on:
  workflow_call:
    inputs:
      environment:
        type: string
        required: true
        description: Name of the target environment.    
      ref:  
        type: string
        required: true
        description: The tag or SHA to checkout.

jobs:
  deploy-staging:
    runs-on: ubuntu-latest
    steps:
      - name: Echo secrets for debugging (masked values)
        run: |
          echo "WIF_PROVIDER: ${{ secrets.WIF_PROVIDER }}"
          echo "WIF_SERVICE_ACCOUNT: ${{ secrets.WIF_SERVICE_ACCOUNT }}"
      
      - name: Checkout
        uses: actions/checkout@v3
      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'
          token_format: 'access_token'

      - name: Echo secrets for debugging (masked values)
        run: |
          echo "WIF_PROVIDER: ${{ secrets.WIF_PROVIDER }}" # Will show a masked value, not the actual secret
          echo "WIF_SERVICE_ACCOUNT: ${{ secrets.WIF_SERVICE_ACCOUNT }}" # Will show a masked value, not the actual secret


      - name: Docker Auth
        id: docker-auth
        uses: 'docker/login-action@v1'
        with:
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.access_token }}'
          registry: '${{ vars.REGION }}-docker.pkg.dev'

      - name: Build, tag and push container
        id: build-image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: true 
          tags: |
            ${{ vars.REGION }}-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/${{ vars.ARTIFACT_REPO }}/${{ vars.SERVICE_NAME }}:${{ inputs.ref }}

      - name: Deploy to Cloud Run
        id: deploy
        run: |
          gcloud run deploy ${{ vars.SERVICE_NAME }} \
            --image=${{ vars.REGION }}-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/${{ vars.ARTIFACT_REPO }}/${{ vars.SERVICE_NAME }}:${{ inputs.ref }} \
            --region=${{ vars.REGION }} \
            --memory=1Gi \
            --cpu=2 \
            --min-instances=1 \
            --max-instances=2 \
            --port=8000 \
            --[no-]use-http2 \
            --set-env-vars=PREDICT_MODEL_URL=${{ vars.PREDICT_MODEL_URL }},\
              PROJECT_ID=${{ vars.GCP_PROJECT_ID }},\
              TOPIC_ID=${{ secrets.TOPIC_ID }},\
              ENVIRONMENT=${{ vars.ENVIRONMENT }},\
              VERTEX_PROJECT_ID=${{ secrets.VERTEX_PROJECT_ID }},\
              GEN_MODEL_LOCATION=${{ secrets.GEN_MODEL_LOCATION }},\
              GEN_MODEL_ID=${{ secrets.GEN_MODEL_ID }}





